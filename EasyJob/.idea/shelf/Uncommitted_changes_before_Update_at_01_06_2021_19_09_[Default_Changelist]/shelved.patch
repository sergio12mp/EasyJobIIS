Index: src/PanelHFavoritos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class PanelHFavoritos extends JPanel implements VistaEasyJob {\r\n\r\n    private String fuente = \"Arial\";\r\n\r\n\r\n    private JButton fAtras;\r\n    private JLabel fav, hFav;\r\n\r\n    static String bFAtras = \"ATRAS\";\r\n\r\n\r\n    public PanelHFavoritos() {\r\n\r\n        setLayout(new GridLayout(3, 3, 5, 5));\r\n\r\n        JPanel p1 = new JPanel();\r\n        p1.setLayout(new GridLayout(2, 3, 5, 5));\r\n\r\n        JPanel p2 = new JPanel();\r\n        p2.setLayout(new GridLayout(2, 3, 5, 5));\r\n\r\n        fAtras = new JButton(bFAtras);\r\n        fAtras.setFont(new Font(fuente, Font.BOLD, 18));\r\n        fAtras.setAlignmentX(Component.CENTER_ALIGNMENT);\r\n\r\n        JLabel fav = new JLabel(\"              FAVORITOS\");\r\n        fav.setFont(new Font(fuente, Font.BOLD, 25));\r\n\r\n        JLabel hFav = new JLabel(\"AQUI VAN LOS HORARIOS FAVORITOS\");\r\n\r\n\r\n        p1.add(Box.createVerticalStrut(3));\r\n        p1.add(Box.createVerticalStrut(3));\r\n        p1.add(Box.createVerticalStrut(3));\r\n\r\n        p1.add(Box.createVerticalStrut(3));\r\n        p1.add(fav);\r\n        p1.add(Box.createVerticalStrut(3));\r\n\r\n        add(p1);\r\n\r\n        add(hFav);\r\n\r\n        p2.add(Box.createVerticalStrut(3));\r\n        p2.add(fAtras);\r\n        p2.add(Box.createVerticalStrut(3));\r\n\r\n        p2.add(Box.createVerticalStrut(3));\r\n        p2.add(Box.createVerticalStrut(3));\r\n        p2.add(Box.createVerticalStrut(3));\r\n\r\n        add(p2);\r\n\r\n    }\r\n\r\n    public void controlador(ActionListener ctrl) {\r\n        fAtras.addActionListener(ctrl);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/PanelHFavoritos.java	(revision 25db6c46a20e1fd46a0106dc512b1f0b76f297b2)
+++ src/PanelHFavoritos.java	(date 1622565672509)
@@ -10,7 +10,7 @@
     private JButton fAtras;
     private JLabel fav, hFav;
 
-    static String bFAtras = "ATRAS";
+    static String bFAtras = "ATRAS \n";
 
 
     public PanelHFavoritos() {
Index: src/CtrEasyJob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class CtrEasyJob implements ActionListener {\r\n\r\n    VistaEasyJob vistaEasy;     // Vista\r\n    Usuario usuario;            // Modelo\r\n\r\n    public CtrEasyJob(VistaEasyJob ve) {\r\n        vistaEasy = ve;\r\n    }\r\n\r\n    public void actionPerformed(ActionEvent e) {\r\n\r\n        String actComm = e.getActionCommand();\r\n\r\n        if ((actComm.compareTo(PanelIniciarSesion.botonLogin) == 0)\r\n            //&&loginOK(usuario,contrase√±a)\r\n        ) {\r\n\r\n            JComponent comp = (JComponent) e.getSource();\r\n            Window win = SwingUtilities.getWindowAncestor(comp);\r\n            win.dispose();\r\n\r\n            JFrame frame = new JFrame(\"MENU\");\r\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n\r\n\r\n            PanelVistaPrincipal panel = new PanelVistaPrincipal();\r\n\r\n            panel.controlador(this);\r\n\r\n            frame.getContentPane().add(panel);\r\n            frame.pack();\r\n\r\n            frame.setSize(1000, 500);\r\n            frame.setVisible(true);\r\n\r\n\r\n        } else if (actComm.compareTo(PanelIniciarSesion.botonRegistrar) == 0) {\r\n\r\n            JComponent comp = (JComponent) e.getSource();\r\n            Window win = SwingUtilities.getWindowAncestor(comp);\r\n            win.dispose();\r\n\r\n            JFrame frame = new JFrame(\"Registro\");\r\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n\r\n            PanelRegistro panel = new PanelRegistro();\r\n\r\n            frame.getContentPane().add(panel);\r\n            frame.pack();\r\n\r\n            frame.setSize(600, 400);\r\n            frame.setVisible(true);\r\n\r\n        } else if (actComm.compareTo(PanelVistaPrincipal.bCS) == 0) {\r\n\r\n            System.exit(0);\r\n\r\n        } else if (actComm.compareTo(PanelVistaPrincipal.bHorario) == 0) {\r\n\r\n            JComponent comp = (JComponent) e.getSource();\r\n            Window win = SwingUtilities.getWindowAncestor(comp);\r\n            win.dispose();\r\n\r\n            JFrame frame = new JFrame(\"Horario\");\r\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n\r\n            PanelHorario panel = new PanelHorario();\r\n            panel.controlador(this);\r\n\r\n            frame.getContentPane().add(panel);\r\n            frame.pack();\r\n\r\n            frame.setSize(600, 400);\r\n            frame.setVisible(true);\r\n\r\n        } else if (actComm.compareTo(PanelVistaPrincipal.bChat) == 0) {\r\n\r\n            JComponent comp = (JComponent) e.getSource();\r\n            Window win = SwingUtilities.getWindowAncestor(comp);\r\n            win.dispose();\r\n\r\n            JFrame frame = new JFrame(\"Chat\");\r\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n\r\n            PanelChat panel = new PanelChat();\r\n            panel.controlador(this);\r\n\r\n            frame.getContentPane().add(panel);\r\n            frame.pack();\r\n\r\n            frame.setSize(800, 400);\r\n            frame.setVisible(true);\r\n\r\n        } else if (actComm.compareTo(PanelChat.ENVIARMENSAJE) == 0) {\r\n\r\n            JOptionPane.showMessageDialog(null, \"No se pueden enviar mensajes. Servidor en mantenimiento\");\r\n\r\n\r\n        } else if (actComm.compareTo(PanelChat.MENSAJESPENDIENTES) == 0) {\r\n\r\n            JOptionPane.showMessageDialog(null, \"No se pueden revisar los mensajes. Servidor en mantenimiento\");\r\n\r\n        } else if ((actComm.compareTo(PanelHorario.bHAtras) == 0) || (actComm.compareTo(PanelChat.chatATRAS) == 0)) {\r\n\r\n            JComponent comp = (JComponent) e.getSource();\r\n            Window win = SwingUtilities.getWindowAncestor(comp);\r\n            win.dispose();\r\n\r\n            JFrame frame = new JFrame(\"MENU\");\r\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n\r\n\r\n            PanelVistaPrincipal panel = new PanelVistaPrincipal();\r\n\r\n            panel.controlador(this);\r\n\r\n            frame.getContentPane().add(panel);\r\n            frame.pack();\r\n\r\n            frame.setSize(1000, 500);\r\n            frame.setVisible(true);\r\n\r\n        }else if (actComm.compareTo(PanelHorario.bFav) == 0) {\r\n\r\n\r\n            JComponent comp = (JComponent) e.getSource();\r\n            Window win = SwingUtilities.getWindowAncestor(comp);\r\n            win.dispose();\r\n\r\n            JFrame frame = new JFrame(\"FAVORITOS\");\r\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n\r\n\r\n            PanelHFavoritos panel = new PanelHFavoritos();\r\n\r\n            panel.controlador(this);\r\n\r\n            frame.getContentPane().add(panel);\r\n            frame.pack();\r\n\r\n            frame.setSize(1000, 500);\r\n            frame.setVisible(true);\r\n\r\n        }else if (actComm.compareTo(PanelHFavoritos.bFAtras) == 0) {\r\n\r\n\r\n            JComponent comp = (JComponent) e.getSource();\r\n            Window win = SwingUtilities.getWindowAncestor(comp);\r\n            win.dispose();\r\n\r\n            JFrame frame = new JFrame(\"FAVORITOS\");\r\n            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n\r\n\r\n            PanelHorario panel = new PanelHorario();\r\n\r\n            panel.controlador(this);\r\n\r\n            frame.getContentPane().add(panel);\r\n            frame.pack();\r\n\r\n            frame.setSize(1000, 500);\r\n            frame.setVisible(true);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/CtrEasyJob.java	(revision 25db6c46a20e1fd46a0106dc512b1f0b76f297b2)
+++ src/CtrEasyJob.java	(date 1622567214917)
@@ -146,7 +146,7 @@
             frame.setSize(1000, 500);
             frame.setVisible(true);
 
-        }else if (actComm.compareTo(PanelHFavoritos.bFAtras) == 0) {
+        }else if ((actComm.compareTo(PanelHFavoritos.bFAtras) == 0)||(actComm.compareTo(PanelSolicitudHorario.bSAtras) == 0)) {
 
 
             JComponent comp = (JComponent) e.getSource();
@@ -159,6 +159,27 @@
 
             PanelHorario panel = new PanelHorario();
 
+            panel.controlador(this);
+
+            frame.getContentPane().add(panel);
+            frame.pack();
+
+            frame.setSize(1000, 500);
+            frame.setVisible(true);
+
+        }else if (actComm.compareTo(PanelHorario.bSHorario) == 0) {
+
+
+            JComponent comp = (JComponent) e.getSource();
+            Window win = SwingUtilities.getWindowAncestor(comp);
+            win.dispose();
+
+            JFrame frame = new JFrame("SOLICITAR HORARIO");
+            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
+
+
+            PanelSolicitudHorario panel = new PanelSolicitudHorario();
+
             panel.controlador(this);
 
             frame.getContentPane().add(panel);
Index: src/PanelSolicitudHorario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/PanelSolicitudHorario.java	(date 1622567362464)
+++ src/PanelSolicitudHorario.java	(date 1622567362464)
@@ -0,0 +1,97 @@
+import javax.swing.*;
+import javax.swing.event.ListSelectionEvent;
+import javax.swing.event.ListSelectionListener;
+import java.awt.*;
+import java.awt.event.ActionListener;
+
+public class PanelSolicitudHorario extends JPanel implements VistaEasyJob, ListSelectionListener {
+
+    private String fuente = "Arial";
+    JList<String> listOpciones;
+
+
+    private JButton solAtras;
+    private JLabel hDisponible;
+
+    static String bSAtras= "VOLVER A HORARIO";
+
+
+
+
+
+    public PanelSolicitudHorario(){
+
+        setLayout(new GridLayout(3,3,5,5));
+
+        JPanel p1 = new JPanel();
+        p1.setLayout(new GridLayout(2, 3, 5, 5));
+
+        JPanel p2 = new JPanel();
+        p2.setLayout(new GridLayout(2, 3, 5, 5));
+
+
+
+        String opcionesLista[] = {"LUNES","MARTES","MIERCOLES","JUEVES","VIERNES","SABADO","DOMINGO"};
+        listOpciones = new JList<>(opcionesLista);
+        //??
+        listOpciones.addListSelectionListener(this);
+        this.setBorder(BorderFactory.createLineBorder(Color.BLUE));
+
+        solAtras = new JButton(bSAtras);
+        solAtras.setFont(new Font(fuente, Font.BOLD, 18));
+        solAtras.setAlignmentX(Component.CENTER_ALIGNMENT);
+
+        //JLabel hDisponible = new JLabel("AQUI VAN LOS HORARIOS FAVORITOS");
+
+        JLabel hDisponible = new JLabel(" HORARIOS DISPONIBLES");
+        hDisponible.setFont(new Font(fuente, Font.BOLD, 25));
+
+        add(listOpciones);
+
+
+        p1.add(Box.createVerticalStrut(3));
+        p1.add(Box.createVerticalStrut(3));
+        p1.add(Box.createVerticalStrut(3));
+
+        p1.add(Box.createVerticalStrut(3));
+        p1.add(hDisponible);
+        p1.add(Box.createVerticalStrut(3));
+
+        add(p1);
+
+        add(listOpciones);
+
+        p2.add(Box.createVerticalStrut(3));
+        p2.add(solAtras);
+        p2.add(Box.createVerticalStrut(3));
+
+        p2.add(Box.createVerticalStrut(3));
+        p2.add(Box.createVerticalStrut(3));
+        p2.add(Box.createVerticalStrut(3));
+
+        add(p2);
+
+
+
+    }
+
+    public void controlador(ActionListener ctrl) {
+        solAtras.addActionListener(ctrl);
+    }
+    public void valueChanged(ListSelectionEvent e) {
+        if (e.getValueIsAdjusting() == false) {
+
+            if (listOpciones.getSelectedIndex() == -1) {
+                //No selection, disable fire button.
+                System.out.println("Ning√∫n elemento seleccionado");
+
+            } else {
+                //Selection, enable the fire button.
+                for(String selecc: listOpciones.getSelectedValuesList()) {
+                    System.out.println(selecc);
+                }
+            }
+        }
+    }
+
+}
